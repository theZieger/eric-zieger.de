.headline {
    display: flex;
    position: relative;
    align-items: center;
    height: 3.5rem;
}

.atitle,
.main-title {
    font-family: "Vollkorn", serif;
    font-weight: 400;
}

.atitle {
    margin: 0;
    line-height: 1.2;
    font-size: 1.5rem;
}

.main-title {
    font-size: 2rem;
}

.meta {
    font-family: monospace;
    display: flex;
    justify-content: space-between;
    font-size: 0.9rem;
    margin: 0.5rem 0;
}

.card {
    border-radius: 0.3rem;
    background-color: #fff;
    position: relative;
    overflow: hidden;
    box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 8px 0px;
    transition: box-shadow 0.4s ease;
    padding-top: 7rem !important;
}

.card > * {
    max-width: 100%;
}

.card [class*="gatsby-image-wrapper"] {
    filter: hue-rotate(130deg);
}

.image {
    position: absolute !important;
    top: 0;
    left: 0;
    bottom: calc(100% - 6rem);
    z-index: 1;
    right: 0;
    opacity: .75;
}

.image ~ * {
    z-index: 2;
    position: relative;
}

@keyframes mymove {
    0% {
        transform: translateX(0);
    }
    40% {
        transform: translateX(-0.2em);
    }
    75% {
        transform: translateX(0.2em);
    }
    100% {
        transform: translateX(0);
    }
}

.text {
    max-width: 45ch;
    float: left;
}

.text:after {
    display: inline-block;
    content: "";
    width: 1.5rem;
    height: 1em;
}

.card:hover a,
.card:focus-within a {
    animation: mymove 0.5s ease-in-out infinite;
}

.card:hover,
.card:focus-within {
    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 12px 0px;
}

.link {
    display: flex;
    align-items: flex-end;
    background: none;
    position: absolute;
    justify-content: flex-end;
    top: 0;
    left: 0;
    bottom: 0;
    padding: 1rem;
    right: 0;
}

.icon {
    height: 1.5em;
    width: 1.5em;
    color: var(--token-accent);
}

.full {
    max-width: 60rem;
}

.stack {
    --gap: 1.5rem;
    --padding: 1rem;

    margin: calc(var(--gap, 0) / 2 * -1);
}

.stack > * {
    margin: calc(var(--gap, 0) / 2);
    padding: var(--padding, 0);
}

.switcher {
    --switcher-columns: 2;
    --switcher-breakpoint: 80ch;

    display: flex;
    flex-wrap: wrap;
    --item-min-width: calc(100% / (var(--switcher-columns)));
    --item-breakpoint-modifier: calc(var(--switcher-breakpoint) - 100%);
}

.switcher > * {
    min-width: var(--item-min-width);
    flex: 0 1 calc(var(--item-breakpoint-modifier) * 9999);
}

.stack.switcher > * {
    min-width: calc(var(--item-min-width) - var(--gap) - (2 * var(--padding)));
    flex-basis: calc((var(--item-breakpoint-modifier) - var(--gap) - (2 * var(--padding))) * 9999);
}
